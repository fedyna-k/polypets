name: 'Terraform'

on:
  push:
    branches: [ "main", "infra" ]
  pull_request:

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform Init
      run: terraform init
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }} 

    - name: Terraform Format
      run: terraform fmt -check
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }} 

    - name: Terraform Plan
      run: terraform plan -input=false
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }} 
        TF_VAR_gce_ssh_user: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
        TF_VAR_ssh_key: ${{ secrets.SSH_PUBLIC_KEY }}

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push' || github.ref == 'refs/heads/infra'
      run: terraform apply -auto-approve -input=false
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }} 
        TF_VAR_gce_ssh_user: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
        TF_VAR_ssh_key: ${{ secrets.SSH_PUBLIC_KEY }}
  
  vm-start:
    runs-on: ubuntu-latest
    needs: terraform

    defaults:
      run:
        shell: bash
        working-directory: ./

    steps:
    - name: Install SSH client
      run: sudo apt-get install -y openssh-client

    - name: Set up SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519
        ssh-keyscan app.fedyna.fr >> ~/.ssh/known_hosts

    - name: Start Google Cloud VM
      run: ssh -i ~/.ssh/id_ed25519 ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}@app.fedyna.fr 'bash -s' < ./startup.sh
      env:
        $ENV_FILE: ${{ secrets.ENV_FILE }}